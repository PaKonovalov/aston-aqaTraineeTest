ORM (Object-relational mapping) — технология программирования, которая позволяет преобразовывать несовместимые
типы моделей в ООП, в частности, между хранилищем данных и объектами программирования. ORM используется для
упрощения процесса сохранения объектов в реляционную базу данных и их извлечения, при этом ORM сама заботится о
преобразовании данных между двумя несовместимыми состояниями.

Виды: query builder, ORM light, Hibernate, Spring Data JPA

для предотвращения SQL инъекций используется preparedStatement:

private static final String SAVE_SQL = "INSERT INTO ADDRESS (ID, USER_ID, POSTAL_CODE_ID, COUNTRY_ID, " +
            "REGION_ID, AREA_ID, CITY_ID, SETTLEMENT_ID, STREET_ID, HOUSE, BLOCK, FLAT, TYPE) " +
            " VALUES (NEXTVAL('ADDRESS_SEC'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";

 public Address save(Address address) {
        try (var connection = ConnectionManager.get(DBName.A_BANKING);
             var preparedStatement = connection.prepareStatement(SAVE_SQL, Statement.RETURN_GENERATED_KEYS)) {
            preparedStatement.setLong(1, address.getUserId().getId());
            preparedStatement.setLong(2, address.getPostalCodeId().getId());
            preparedStatement.setLong(3, address.getCountryId().getId());
            preparedStatement.setLong(4, address.getRegionId().getId());
            preparedStatement.setLong(5, address.getAreaId().getId());
            preparedStatement.setLong(6, address.getCityId().getId());
            preparedStatement.setLong(7, address.getSettlementId().getId());
            preparedStatement.setLong(8, address.getStreetId().getId());
            preparedStatement.setString(9, address.getHouse());
            preparedStatement.setString(10, address.getBlock());
            preparedStatement.setString(11, address.getFlat());
            preparedStatement.setString(12, address.getType().getName());
