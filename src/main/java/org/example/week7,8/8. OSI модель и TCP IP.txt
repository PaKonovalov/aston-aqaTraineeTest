7. Прикладной уровень
    Обеспечивает преобразование данных, специфичных для каждого приложения. Отвечает за доступ приложений
    в сеть.

    Протоколы
    HTTP, gopher, Telnet, DNS, SMTP, SNMP, CMIP, FTP, TFTP, SSH, IRC, AIM, NFS, NNTP, NTP, SNTP, XMPP, FTAM,
    APPC, X.400, X.500, AFP, LDAP, SIP, ITMS, ModbusTCP, BACnetIP, IMAP, POP3, SMB, MFTP, BitTorrent, eD2k,
    PROFIBUS

6. Уровень представления
    Осуществляет преобразование данных общего характера (кодирование, компрессия и т.п.) прикладного уровня в
    поток информации для транспортного уровня. Отвечает за возможность диалога между приложениями на разных
    машинах.

    Протоколы
    HTTP, ASN.1, XML-RPC, TDI, XDR, SNMP, FTP, Telnet, SMTP, NCP, AFP

5. Сеансовый уровень
    Добавляет транспортной функции удобства обращения, управляет диалогом на протяжении установленной сессии
    связи. Отвечает за организацию сеансов обмена данными между оконечными машинами.

    Протоколы
    ASP, ADSP, DLC, Named Pipes, NBT, NetBIOS, NWLink, Printer Access Protocol, Zone Information Protocol,
    SSL, TLS, SOCKS

4. Транспортный уровень
    Выполняет свободную от ошибок, ориентированную на работу с сообщениями сквозную передачу. Делит потоки
    информации на достаточно малые фрагменты (пакеты) для передачи их на сетевой уровень.

    Протоколы
    TCP, UDP, NetBEUI, AEP, ATP, IL, NBP, RTMP, SMB, SPX, SCTP, DCCP, RTP,  TFTP

3. Сетевой уровень
    Обеспечивает маршрутизацию, и управление загрузкой канала передачи, предоставляет необработанный маршрут
    передачи, состоящий лишь из конечных точек. Отвечает за деление пользователей на группы. На этом уровне
    происходит маршрутизация пакетов на основе преобразования MAC-адресов в сетевые адреса. Сетевой уровень
    обеспечивает также прозрачную передачу пакетов на транспортный уровень.

    Протоколы
    IP, IPv6, ICMP, IGMP, IPX, NWLink, NetBEUI, DDP, IPSec, ARP, RARP, DHCP, BootP, SKIP, RIP

2. Канальный уровень
    Осуществляет свободную от ошибок передачу по отдельному каналу связи. Обеспечивает создание, передачу и
    прием кадров данных. Этот уровень обслуживает запросы сетевого уровня и использует сервис физического уровня
    для приема и передачи пакетов. Спецификации IEEE 802.x делят канальный уровень на два подуровня: управление
    логическим каналом (LLC) и управление доступом к среде (MAC). LLC обеспечивает обслуживание сетевого уровня,
    а подуровень MAC регулирует доступ к разделяемой физической среде.

    Протоколы
    ARCnet, ATM, DTM, SLIP, SMDS, Ethernet, FDDI, Frame Relay, LocalTalk, Token ring, StarLan, WiFi, L2F, L2TP,
    PPTP, PPP, PPPoE, PROFIBUS,STP

1. Физический уровнь
    Выполняет реальную физическую передачу бит данных. Получает пакеты данных от вышележащего канального уровня и
    преобразует их в оптические или электрические сигналы, соответствующие 0 и 1 бинарного потока. Эти сигналы
    посылаются через среду передачи на приемный узел. Механические и электрические/оптические свойства среды
    передачи определяются на физическом уровне и включают:
    Тип кабелей и разъемов, Разводку контактов в разъемах, Схему кодирования сигналов для значений 0 и 1

    Протоколы
    RS-232, RS-422, RS-423, RS-449, RS-485, ITU-T, xDSL, ISDN, T-carrier (T1, E1), модификации стандарта Ethernet:
    10BASE-T, 10BASE2, 10BASE5, 100BASE-T (включает 100BASE-TX, 100BASE-T4, 100BASE-FX), 1000BASE-T, 1000BASE-TX,
    1000BASE-SX

Модель TCP/IP разрабатывалась для описания стека протоколов TCP/IP (Transmission Control Protocol/Internet
    Protocol).
    Стек протоколов TCP/IP — набор сетевых протоколов, на которых базируется интернет. Обычно в стеке TCP/IP
    верхние 3 уровня (прикладной, представительный и сеансовый) модели OSI объединяют в один — прикладной.
    Поскольку в таком стеке не предусматривается унифицированный протокол передачи данных, функции по определению
    типа данных передаются приложению.
    В отличие от модели OSI, модель ТСР/IP в большей степени ориентируется на обеспечение сетевых взаимодействий,
    нежели на жесткое разделение функциональных уровней. Для этой цели она признает важность иерархической
    структуры функций, но предоставляет проектировщикам протоколов достаточную гибкость в реализации.
    Соответственно, эталонная модель OSI гораздо лучше подходит для объяснения механики межкомпьютерных
    взаимодействий, но протокол TCP/IP стал основным межсетевым протоколом.