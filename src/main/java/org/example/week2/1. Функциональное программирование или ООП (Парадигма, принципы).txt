Парадигма ФП основана на данных и их обработчиках. Каждый обработчик представляет из себя функцию, принимающую
исходные данные и возвращающие результат. При этом мы просто в потоке преобразуем одни данные в другие

В ООП же мы работаем с объектами и взаимодействием между ними.

Принципы ФП:
1. чистые функции
    - Они не создают побочных эффектов
    это изменение какого-либо элемента, не связанного с функцией, исполняемой в конкретный
    момент. нарушения условия чистоты: вызовы переменной вне функции, вывод в консоль, вызов исключения, чтение
    файловых данных.

    - они всегда производят одинаковый вывод при получении одинакового ввода.

2. Функции первого класса/высшего порядка
    - ф-ия считаеися первоклассной если есть возможность для ее объявления ввиде переменной (примитива)
    ф-я может: храниться в пременной, передаваться как аргумент, возвращаться из ф-иии. имея эти возможности
    ф-ии наз. ф-ми первого класса

    - идея ф-ии высшего порядка в том, что ф-ия более высокого порядка принимает ф-ию в качестве входных данных,
    выполняет операцию над входной ф-ией и возвращает ф-ию

3. Неизменность переменных
    нельзя менять переменную после ее инициализаци, но можно создавать новую